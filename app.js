const USERS = [
    {name: "–í–µ—Ä–∞", age: 4, key: "vera"},
    {name: "–ú–∞—Ç–≤–µ–π", age: 7, key: "matvey"},
    {name: "–ù–∏–∫–∏—Ç–∞", age: 12, key: "nikita"}
];
const USER_STYLES = {
    "–í–µ—Ä–∞":"vera",
    "–ú–∞—Ç–≤–µ–π":"matvey",
    "–ù–∏–∫–∏—Ç–∞":"nikita"
};
const TODAY = new Date();
const IS_SUMMER = (TODAY.getMonth() === 5 || TODAY.getMonth() === 6 || TODAY.getMonth() === 7);
// === –í–æ–ø—Ä–æ—Å—ã ===
const QUESTIONS_SET = {
    "–í–µ—Ä–∞": [
        {
            label: "–ö–∞–∫ —Ç—ã —Å–µ–±—è —á—É–≤—Å—Ç–≤—É–µ—à—å?",
            key: "feel",
            type: "emoji",
            options: [
                {emoji:"üòä", text:"–í–µ—Å–µ–ª–æ!"},
                {emoji:"üò¥", text:"–°–æ–Ω–Ω–æ"},
                {emoji:"üòï", text:"–ì—Ä—É—Å—Ç–Ω–æ"}
            ],
            bg: "linear-gradient(120deg,#fffde7 50%, #f8bbd0 100%)",
            icon: "üåû"
        },
        {
            label: "–ß—Ç–æ —Ç–µ–±–µ —Å–µ–≥–æ–¥–Ω—è –ø—Ä–∏—Å–Ω–∏–ª–æ—Å—å?",
            key: "dream",
            type: "emoji",
            options: [
                {emoji:"ü¶Ñ", text:"–í–æ–ª—à–µ–±—Å—Ç–≤–æ"},
                {emoji:"üê±", text:"–ñ–∏–≤–æ—Ç–Ω—ã–µ"},
                {emoji:"üôà", text:"–ù–µ –ø–æ–º–Ω—é"}
            ],
            bg: "linear-gradient(120deg,#e1f5fe 50%, #ede7f6 100%)",
            icon: "üí§"
        },
        {
            label: "–ß—Ç–æ –±—ã —Ç—ã —Ö–æ—Ç–µ–ª–∞ —Å–µ–≥–æ–¥–Ω—è —Å–¥–µ–ª–∞—Ç—å?",
            key: "goal",
            type: "emoji",
            options: [
                {emoji:"üé®", text:"–†–∏—Å–æ–≤–∞—Ç—å"},
                {emoji:"ü§∏", text:"–ò–≥—Ä–∞—Ç—å"},
                {emoji:"üìö", text:"–°–ª—É—à–∞—Ç—å —Å–∫–∞–∑–∫—É"}
            ],
            bg: "linear-gradient(120deg,#fcebb6 50%, #f8bbd0 100%)",
            icon: "üåà"
        }
    ],
    "–ú–∞—Ç–≤–µ–π": [
        {
            label: "–ö–∞–∫ —Ç—ã —Å–µ–±—è —á—É–≤—Å—Ç–≤—É–µ—à—å?",
            key: "feel",
            type: "emoji",
            options: [
                {emoji:"üòÉ", text:"–ö–ª–∞—Å—Å–Ω–æ"},
                {emoji:"üôÇ", text:"–•–æ—Ä–æ—à–æ"},
                {emoji:"üòï", text:"–ù–µ –æ—á–µ–Ω—å"}
            ],
            bg: "linear-gradient(120deg,#e3f5fe 50%, #b3e5fc 100%)",
            icon: "‚òÄÔ∏è"
        },
        {
            label: "–ß—Ç–æ —Ç–µ–±–µ —Å–Ω–∏–ª–æ—Å—å?",
            key: "dream",
            type: "emoji",
            options: [
                {emoji:"üöó", text:"–ú–∞—à–∏–Ω—ã"},
                {emoji:"ü¶∏", text:"–ì–µ—Ä–æ–∏"},
                {emoji:"üò¥", text:"–ù–µ –ø–æ–º–Ω—é"}
            ],
            bg: "linear-gradient(120deg,#fff8e1 50%, #b3e5fc 100%)",
            icon: "üí§"
        },
        {
            label: "–ß—Ç–æ –±—ã —Ç—ã —Ö–æ—Ç–µ–ª —É–∑–Ω–∞—Ç—å —Å–µ–≥–æ–¥–Ω—è?",
            key: "learn",
            type: "emoji",
            options: [
                {emoji:"üåç", text:"–ü—Ä–æ –º–∏—Ä"},
                {emoji:"ü¶ï", text:"–ü—Ä–æ –∂–∏–≤–æ—Ç–Ω—ã—Ö"},
                {emoji:"ü§î", text:"–ß—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ"}
            ],
            bg: "linear-gradient(120deg,#e1f5fe 50%, #ffe0b2 100%)",
            icon: "üîç"
        },
        {
            label: "–ß–µ–º –ø–æ–º–æ–∂–µ—à—å –¥–æ–º–∞ —Å–µ–≥–æ–¥–Ω—è?",
            key: "help",
            type: "emoji",
            options: [
                {emoji:"ü•£", text:"–ù–∞–∫—Ä–æ—é –Ω–∞ —Å—Ç–æ–ª"},
                {emoji:"üßπ", text:"–£–±–µ—Ä—É –∏–≥—Ä—É—à–∫–∏"},
                {emoji:"üòä", text:"–ü–æ–º–æ–≥—É –º–∞–º–µ"}
            ],
            bg: "linear-gradient(120deg,#c8e6c9 50%, #b3e5fc 100%)",
            icon: "üå±"
        },
        {
            label: IS_SUMMER ?
                "–ß—Ç–æ —Ç—ã —Å–µ–≥–æ–¥–Ω—è –±—É–¥–µ—à—å —á–∏—Ç–∞—Ç—å?" :
                "–ß—Ç–æ —Ç—ã —Å–µ–≥–æ–¥–Ω—è –ø–æ—á–∏—Ç–∞–µ—à—å?",
            key: "read",
            type: "emoji",
            options: [
                {emoji:"üìö", text:"–ö–Ω–∏–≥—É"},
                {emoji:"üìñ", text:"–ë–∏–±–ª–∏—é"},
                {emoji:"üì∞", text:"–ñ—É—Ä–Ω–∞–ª"}
            ],
            bg: "linear-gradient(120deg,#fffde7 50%, #b3e5fc 100%)",
            icon: "üìö"
        }
    ],
    "–ù–∏–∫–∏—Ç–∞": [
        {
            label: "–ö–∞–∫–æ–µ —É —Ç–µ–±—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ?",
            key: "feel",
            type: "emoji",
            options: [
                {emoji:"üòé", text:"–°—É–ø–µ—Ä!"},
                {emoji:"üôÇ", text:"–•–æ—Ä–æ—à–µ–µ"},
                {emoji:"üò∂", text:"–°–∫—É—á–Ω–æ"},
                {emoji:"üò©", text:"–ù–µ—Ç —Å–∏–ª"}
            ],
            bg: "linear-gradient(120deg,#ffcdd2 60%, #e57373 100%)",
            icon: "üî•"
        },
        {
            label: "–ß—Ç–æ —Ç–µ–±–µ —Å–µ–≥–æ–¥–Ω—è —Å–Ω–∏–ª–æ—Å—å?",
            key: "dream",
            type: "emoji",
            options: [
                {emoji:"üåà", text:"–ö—Ä—É—Ç–æ–π —Å–æ–Ω"},
                {emoji:"üöÄ", text:"–ë—ã–ª–∏ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è"},
                {emoji:"üôà", text:"–ù–µ –∑–∞–ø–æ–º–Ω–∏–ª"}
            ],
            bg: "linear-gradient(120deg,#e1f5fe 50%, #e57373 100%)",
            icon: "üõå"
        },
        {
            label: "–ö–∞–∫–∞—è —Ç–≤–æ—è –≥–ª–∞–≤–Ω–∞—è –∑–∞–¥–∞—á–∞ –Ω–∞ –¥–µ–Ω—å?",
            key: "goal",
            type: "emoji",
            options: [
                {emoji:"üìñ", text:"–£—á—ë–±–∞"},
                {emoji:"üèÜ", text:"–°–ø–æ—Ä—Ç"},
                {emoji:"üÜï", text:"–ù–∞—É—á–∏—Ç—å—Å—è –Ω–æ–≤–æ–º—É"}
            ],
            bg: "linear-gradient(120deg, #ffebee 60%, #fbc02d 100%)",
            icon: "üèÜ"
        },
        {
            label: "–ß—Ç–æ –±—ã —Ç—ã —Ö–æ—Ç–µ–ª —Å–æ–∑–¥–∞—Ç—å/–ø—Ä–∏–¥—É–º–∞—Ç—å —Å–µ–≥–æ–¥–Ω—è?",
            key: "create",
            type: "emoji",
            options: [
                {emoji:"ü§ñ", text:"–†–æ–±–æ—Ç–∞/–∏–≥—Ä—É"},
                {emoji:"üéß", text:"–ü–ª–µ–π–ª–∏—Å—Ç"},
                {emoji:"üé≤", text:"–ù–∞—Å—Ç–æ–ª–∫—É"}
            ],
            bg: "linear-gradient(120deg, #e8eaf6, #ffcdd2 100%)",
            icon: "üí°"
        },
        {
            label: "–ö–∞–∫–∞—è –ø—Ä–∏–≤—ã—á–∫–∞/—Ä—É—Ç–∏–Ω–∞ –±—É–¥–µ—Ç —Å–µ–≥–æ–¥–Ω—è?",
            key: "habit",
            type: "emoji",
            options: [
                {emoji:"‚ö°Ô∏è", text:"–ó–∞—Ä—è–¥–∫–∞"},
                {emoji:"üö∞", text:"–ü–∏—Ç—å –≤–æ–¥—É"},
                {emoji:"üìñ", text:"–ß–∏—Ç–∞—Ç—å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å"}
            ],
            bg: "linear-gradient(120deg, #ffe0b2, #e57373 100%)",
            icon: "üîã"
        },
        {
            label: IS_SUMMER ?
                "–ß—Ç–æ —Ö–æ—á–µ—à—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å –ª–µ—Ç–æ–º?" :
                "–ß—Ç–æ –±—É–¥–µ—à—å —á–∏—Ç–∞—Ç—å —Å–µ–≥–æ–¥–Ω—è?",
            key: "read",
            type: "emoji",
            options: [
                {emoji:"üìñ", text:"–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è"},
                {emoji:"üìö", text:"–ë–∏–±–ª–∏—é"},
                {emoji:"üì∞", text:"–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ"}
            ],
            bg: "linear-gradient(120deg,#e1f5fe,#ffcdd2 100%)",
            icon: "üìñ"
        },
        {
            label: IS_SUMMER
                ? "–°–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç —Å–µ–≥–æ–¥–Ω—è –Ω–µ —Ç—Ä–æ–≥–∞–µ—à—å —Ç–µ–ª–µ—Ñ–æ–Ω?"
                : "–°–∫–æ–ª—å–∫–æ —á–∞—Å–æ–≤ –±–µ–∑ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–æ 18:00?",
            key: "phone",
            type: "emoji",
            options: [
                {emoji:"‚è≥", text:"> 2 —á–∞—Å–∞"},
                {emoji:"‚åõÔ∏è", text:"1 —á–∞—Å"},
                {emoji:"ü§è", text:"–ú–∞–ª–µ–Ω—å–∫–æ"}
            ],
            bg: "linear-gradient(120deg,#bbded6,#ffcdd2 100%)",
            icon: "üìµ"
        },
        {
            label: IS_SUMMER
                ? "–ß—Ç–æ –∑–∞–ø–∏—Å–∞–ª –≤ —Ç–µ—Ç—Ä–∞–¥—å –∏–ª–∏ –ë–∏–±–ª–∏—é —Å–µ–≥–æ–¥–Ω—è?"
                : "–ß—Ç–æ –∑–∞–ø–∏—à–µ—à—å –≤ –¥–Ω–µ–≤–Ω–∏–∫?",
            key: "journal",
            type: "emoji",
            options: [
                {emoji:"üìù", text:"–î–æ–º–∞—à–∫–∞/–∏–¥–µ–∏"},
                {emoji:"üìÖ", text:"–ü–ª–∞–Ω—ã"},
                {emoji:"üôè", text:"–°—Ç–∏—Ö –∏–ª–∏ –º—ã—Å–ª—å –∏–∑ –ë–∏–±–ª–∏–∏"}
            ],
            bg: "linear-gradient(120deg, #e3f2fd, #ffcdd2 100%)",
            icon: "üìì"
        },
        {
            label: "–ö–∞–∫ –ø–æ–¥—É–º–∞–µ—à—å —Å–µ–≥–æ–¥–Ω—è –æ –ë–æ–≥–µ?",
            key: "bible",
            type: "emoji",
            options: [
                {emoji:"üìñ", text:"–ü–æ—á–∏—Ç–∞—é –ë–∏–±–ª–∏—é"},
                {emoji:"ü§≤", text:"–ü–æ–º–æ–ª—é—Å—å —É—Ç—Ä–æ–º"},
                {emoji:"‚ù§Ô∏è", text:"–°–¥–µ–ª–∞—é —á—Ç–æ-—Ç–æ –¥–æ–±—Ä–æ–µ"}
            ],
            bg: "linear-gradient(120deg,#fff3e0,#e1bee7 100%)",
            icon: "üôå"
        }
    ]
};
// ======= –•—Ä–∞–Ω–∏–ª–∏—â–µ –∏ —Ñ—É–Ω–∫—Ü–∏–∏ =======
const app = document.getElementById('app');
let currentUser = null;
let answers = {};
let step = 0;
let QUESTIONS = [];

function reset() {
    currentUser = null;
    answers = {};
    step = 0;
}
function today() {
    const d = new Date();
    return d.getFullYear() + "-" + String(d.getMonth()+1).padStart(2,'0') + "-" + String(d.getDate()).padStart(2,'0');
}
function saveAnswers(user, date, answers) {
    const storageKey = "answers_" + user;
    let all = JSON.parse(localStorage.getItem(storageKey) || "[]");
    all = all.filter(record => record.date !== date);
    all.unshift({date, answers});
    localStorage.setItem(storageKey, JSON.stringify(all.slice(0, 13)));
}
function getAnswers(user) {
    const storageKey = "answers_" + user;
    return JSON.parse(localStorage.getItem(storageKey) || "[]");
}
function motivationPhrase(name) {
    const phrases = [
        "–ü—É—Å—Ç—å —É —Ç–µ–±—è –ø–æ–ª—É—á–∏—Ç—Å—è –≤—Å—ë, —á—Ç–æ –∑–∞–¥—É–º–∞–ª!",
        "–ú–µ–Ω—è–π –º–∏—Ä –∫ –ª—É—á—à–µ–º—É, –Ω–∞—á–Ω–∏ —Å —Å–µ–±—è —Å–µ–≥–æ–¥–Ω—è!",
        "–°–µ–º—å—è, –¥—Ä—É–∑—å—è –∏ –ë–æ–≥ —Ä—è–¥–æ–º ‚Äî –≤–ø–µ—Ä–µ–¥–∏ –æ—Ç–ª–∏—á–Ω—ã–π –¥–µ–Ω—å!",
        "–•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è! –ë–æ–ª—å—à–µ —Ä–∞–¥–æ—Å—Ç–∏, –º–µ–Ω—å—à–µ —ç–∫—Ä–∞–Ω–∞! üòä",
        "–°–∞–º–æ–µ –≤–∞–∂–Ω–æ–µ ‚Äî –≤–∏–¥–µ—Ç—å –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ–µ –≤–æ–∫—Ä—É–≥."
    ];
    if (name === "–í–µ—Ä–∞") return "–ü—É—Å—Ç—å —Ç–≤–æ–π –¥–µ–Ω—å –±—É–¥–µ—Ç —Ä–∞–¥–æ—Å—Ç–Ω—ã–º –∏ –≤–µ—Å—ë–ª—ã–º! ü¶Ñ";
    if (name === "–ú–∞—Ç–≤–µ–π") return "–ú–µ—á—Ç–∞–π, –∏–≥—Ä–∞–π, —É–∑–Ω–∞–π –Ω–æ–≤–æ–µ ‚Äî —Ç—ã –º–æ–ª–æ–¥–µ—Ü!";
    return phrases[Math.floor(Math.random()*phrases.length)];
}
function planForDay(answers, age) {
    let plan = [];
    if (age < 6) {
        plan = [
            "–ü–æ–∏–≥—Ä–∞–π —Å –∏–≥—Ä—É—à–∫–∞–º–∏ –±–µ–∑ –≥–∞–¥–∂–µ—Ç–æ–≤",
            "–ü–æ–≥—É–ª—è–π –Ω–∞ —É–ª–∏—Ü–µ —Å —Ä–æ–¥–Ω—ã–º–∏",
            "–û–±–Ω–∏–º–∏ –º–∞–º—É –∏–ª–∏ –ø–∞–ø—É",
            "–ü–æ–ø—Ä–æ–±—É–π: " + (answers.goal||'—Å–¥–µ–ª–∞—Ç—å —á—Ç–æ-—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ')
        ];
    } else if (age < 9) {
        plan = [
            "–ü–æ–∏–≥—Ä–∞–π —Å –±—Ä–∞—Ç–æ–º/—Å–µ—Å—Ç—Ä–æ–π –∏–ª–∏ –¥—Ä—É–≥–æ–º",
            "–ü–æ–º–æ–≥–∏ –¥–æ–º–∞ ‚Äî –ø—Ä–æ—Å—Ç–æ —Ç–∞–∫",
            "–î–µ–ª–∞–π –∑–∞—Ä—è–¥–∫—É –∏–ª–∏ —Ç–∞–Ω—Ü—É–π –ø–æ–¥ –º—É–∑—ã–∫—É",
            (answers.read?.includes("–ë–∏–±–ª–∏—é") ? "–ü–æ—á–∏—Ç–∞–π –ë–∏–±–ª–∏—é" : "–ü–æ—á–∏—Ç–∞–π –∫–Ω–∏–≥—É –∏–ª–∏ –ë–∏–±–ª–∏—é")
        ];
        if (IS_SUMMER) plan.push("–°–µ–≥–æ–¥–Ω—è –±—É–¥–µ—Ç –º–µ–Ω—å—à–µ —Ç–µ–ª–µ—Ñ–æ–Ω–∞!");
    } else {
        plan = [
            "–í—ã–ø–æ–ª–Ω–∏ —Å–≤–æ—é –≥–ª–∞–≤–Ω—É—é –∑–∞–¥–∞—á—É –¥–Ω—è (–∏–ª–∏ –ø—Ä–∏–¥—É–º–∞–π –Ω–æ–≤—É—é)",
            "–ù–∞–ø–∏—à–∏ –ø–∞—Ä—É –º—ã—Å–ª–µ–π –∏–ª–∏ –∑–∞–ø–∏—Å–µ–π –≤ –¥–Ω–µ–≤–Ω–∏–∫ –∏–ª–∏ –ë–∏–±–ª–∏—é",
            (answers.bible?.includes("–ë–∏–±–ª–∏—é") ? "–ö–∞–∂–¥—ã–π –¥–µ–Ω—å —á–∏—Ç–∞–π –ë–æ–∂—å–µ —Å–ª–æ–≤–æ!" : "–ü—Ä–æ—á–∏—Ç–∞–π —Å–µ–≥–æ–¥–Ω—è —Ö–æ—Ç—è –±—ã –ø–∞—Ä—É —Å—Ç–∏—Ö–æ–≤ –∏–∑ –ë–∏–±–ª–∏–∏"),
            (answers.habit ? "–°–¥–µ–ª–∞–π –ø—Ä–∏–≤—ã—á–∫—É –¥–Ω—è: "+answers.habit : ""),
            "–ö–∞–∫ –º–æ–∂–Ω–æ –º–µ–Ω—å—à–µ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ ‚Äî —Ç–æ–ª—å–∫–æ –ø–æ–ª–µ–∑–Ω–æ–µ!"
        ].filter(Boolean);
        if (IS_SUMMER) plan.push("–õ–µ—Ç–æ–º –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–≥–∞–∂ –∑–Ω–∞–Ω–∏–π –∏ –¥—É—Ö–æ–≤–Ω—ã—Ö –æ—Ç–∫—Ä—ã—Ç–∏–π!");
    }
    return plan;
}
function buildTelegramText(username, answers, questionsList) {
    let lines = [`‚≠ê –î–æ–±—Ä–æ–µ —É—Ç—Ä–æ, —ç—Ç–æ –∞–Ω–∫–µ—Ç–∞ ${username}:`];
    questionsList.forEach(q=>{
        lines.push(`${q.icon||""} ${q.label} ${answers[q.key]||""}`);
    });
    lines.push(`\n–û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∏–∑ —Å–µ–º–µ–π–Ω–æ–π –∞–Ω–∫–µ—Ç—ã —Ñ—Ä–∞–≥–º–µ–Ω—Ç: https://github.com`);
    return lines.join('\n');
}
function telegramShareBtn(text) {
    const btn = document.createElement('button');
    btn.textContent = "üì§ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –≤ –¢–µ–ª–µ–≥—Ä–∞–º";
    btn.className = "tg-share";
    btn.onclick = () => {
        const url = 'https://t.me/share/url?url=&text=' + encodeURIComponent(text);
        window.open(url, "_blank");
    };
    return btn;
}
function history(user) {
    const div = document.createElement('div');
    div.style.marginTop = "16px";
    const ansList = getAnswers(user);
    if (ansList.length === 0) return div;
    const h = Object.assign(document.createElement('h3'), {textContent: '–ò—Å—Ç–æ—Ä–∏—è –æ—Ç–≤–µ—Ç–æ–≤:'});
    div.appendChild(h);
    ansList.forEach(item => {
        const entry = document.createElement('div');
        entry.className = "history-entry";
        entry.innerHTML = `<b>${item.date}:</b><br>` + QUESTIONS.map(q =>
            `<span>${q.icon||''}<b> ${q.label.split(' ')[0]}:</b> <span>${item.answers[q.key]}</span>`
        ).join("<br>");
        div.appendChild(entry);
    });
    return div;
}
function miniExitBtn() {
    const btn = Object.assign(document.createElement('button'), {
        textContent: "‚üµ –ù–∞–∑–∞–¥",
        onclick: ()=>{ reset(); render(); }
    });
    btn.style.margin = "12px auto 0 auto";
    btn.style.display = "block";
    btn.style.width = "120px";
    btn.style.background = "#f5f5f5";
    btn.style.color = "#667";
    btn.style.border = "1.4px solid #e0e0e0";
    btn.style.fontSize = "1.11rem";
    return btn;
}
// === –ì–ª–∞–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ ‚Äî –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è ===
function render() {
    app.className = "";
    app.innerHTML = "";

    if (!currentUser) {
        reset();
        app.innerHTML += "<h2>–ö—Ç–æ —Ç—ã?</h2>";
        const wrap = document.createElement('div');
        wrap.className = "user-select";
        USERS.forEach(u => {
            const btn = document.createElement('button');
            btn.className = `user-btn`;
            btn.textContent = u.name;
            btn.onclick = () => {
                currentUser = u.name;
                QUESTIONS = QUESTIONS_SET[currentUser] || [];
                render();
            };
            wrap.appendChild(btn);
        });
        app.appendChild(wrap);
    } else if (step < QUESTIONS.length) {
        app.className = USER_STYLES[currentUser];
        const q = QUESTIONS[step];
        const block = document.createElement('div');
        block.className = "question-block";
        block.style.background = q.bg;

        block.innerHTML = `
            <div class="question-icon">${q.icon}</div>
            <div class="question-label">${q.label}</div>
        `;
        const opts = document.createElement('div');
        opts.className = "options-row";
        q.options.forEach(opt => {
            const btn = document.createElement('button');
            btn.type = "button";
            btn.className = "option-emoji";
            btn.innerHTML = `<span>${opt.emoji}</span><span style="font-size:1.08rem; margin-top:2px">${opt.text}</span>`;
            btn.onclick = () => {
                answers[q.key] = `${opt.emoji} ${opt.text}`;
                step++;
                render();
            };
            opts.appendChild(btn);
        });
        block.appendChild(opts);
        app.appendChild(Object.assign(document.createElement("h2"), {textContent: currentUser}));
        app.appendChild(block);
        app.appendChild(miniExitBtn());
    } else {
        let user = currentUser, age = USERS.find(u => u.name === user).age;
        saveAnswers(user, today(), answers);
        app.className = USER_STYLES[user];
        app.appendChild(Object.assign(document.createElement('h2'), {textContent: user + ", –¥–µ–Ω—å –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è!"}));
        let motiv = document.createElement("div");
        motiv.className = "motivation";
        motiv.textContent = motivationPhrase(user);
        app.appendChild(motiv);

        let plan = planForDay(answers, age);
        let planDiv = document.createElement("div");
        planDiv.className = "plan";
        planDiv.innerHTML = "<b>–¢–≤–æ–π –ø–ª–∞–Ω:</b><br><ul style='list-style:none;padding:0;margin:8px 0 0 0'>" +
            plan.map(item => `<li>${item}</li>`).join("") + "</ul>";
        app.appendChild(planDiv);

        let results = document.createElement("div");
        results.style.margin = "18px auto 5px auto";
        results.style.background = "#fefefe";
        results.style.borderRadius = "13px";
        results.style.padding = "11px 13px 6px 13px";
        results.innerHTML = `<b>–¢–≤–æ–∏ –æ—Ç–≤–µ—Ç—ã —Å–µ–≥–æ–¥–Ω—è:</b><br>` +
            QUESTIONS.map(q => `<span>${q.icon || ""} <b>${q.label}:</b> <span>${answers[q.key]}</span>`).join("<br>");
        app.appendChild(results);

        // –ö–Ω–æ–ø–∫–∞ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –≤ –¢–µ–ª–µ–≥—Ä–∞–º
        let shareText = buildTelegramText(user, answers, QUESTIONS);
        app.appendChild(telegramShareBtn(shareText));
        // –ò—Å—Ç–æ—Ä–∏—è –∏ –ø–æ–≤—Ç–æ—Ä
        app.appendChild(history(user));
        let again = Object.assign(document.createElement('button'), {
            textContent: "‚ü≤ –ü—Ä–æ–π—Ç–∏ –µ—â—ë —Ä–∞–∑",
            onclick: ()=>{
                answers = {};
                step = 0; render();
            }
        });
        again.style.margin = "12px 0 0 0";
        app.appendChild(again);
        app.appendChild(miniExitBtn());
    }
}
render();
